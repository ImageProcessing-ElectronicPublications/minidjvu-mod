.\" Copyright (c) 2005  Ilya Mezhirov
.\" Copyright (c) 2009  Alexey Kryukov
.\" Copyright (c) 2021  Alexander Trufanov
.\" 
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" 
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\" 
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public
.\" License along with this manual. Otherwise check the web site
.\" of the Free Software Foundation at http://www.fsf.org.
.\" 
.TH "MINIDJVU-MOD" "20" "October 2021" "minidjvu-mod-0.9m07" "minidjvu-mod-0.9m07"
.SH "NAME"
minidjvu-mod - encode/decode black-and-white DjVu pages

.SH "SYNOPSIS"
.BI "minidjvu-mod  [" "options" "] " "input_file" " " "output_file"

There is a similar syntax for multipage compression:
    
.BI "minidjvu-mod  [" "options" "] " "input_files" " " "output_file"

.BI "minidjvu-mod  [" "options" "] " "directory" " " "output_file"

See
.B "MULTIPAGE ENCODING" 
section below for more details.

.SH "DESCRIPTION"
minidjvu-mod encodes and decodes single-page black-and-white DjVu files.

minidjvu-mod is derived from DjVuLibre, which is the primary support library
for DjVu.

Besides bitonal DjVu, minidjvu-mod understands Windows BMP, PBM and TIFF (through
libtiff) formats.

If
.I directory
is specified as a source. It will be scanned for suported image formats (no recursive).

Both
.I inputfile
and
.I outputfile
may be BMP, PBM, TIFF or DjVu. The file type is determined by extension.
Input and output may coincide.

When given a DjVu-to-DjVu job, minidjvu-mod decodes, then re-encodes the image.
DjVu layers other than bitonal picture are lost.

Specifying a bitmap-to-bitmap job is possible, but relatively useful only with
.BR --smooth
option.

All options preceded by two hyphens can be used with one hyphen.
This is done to make minidjvu-mod interface more familiar for DjVuLibre users.

.SH "MULTIPAGE ENCODING"

To activate the multipage mode either specify in your command line more than
just one input file, or pass to minidjvu-mod a single multipage tiff document. By default (if
.BR --indirect
is not specified) the compressed pages are stored into a single bundled
document under the name provided in the command line.

There are several options referring to the multipage encoding process, namely
.B --pages-per-dict,
.B --indirect
and
.B --report.

.SH "OPTIONS"
.TP
.BI "-A"
.TP 
.BI "--Averaging"
Compute "average" representatives for shapes matching a pattern.

This option is turned on by
.BR "--lossy".

.TP
.BI "-a " "n"
.TP 
.BI "--aggression " "n"
Sets aggression for pattern matching. The more the aggression, the less the
file size, but the more likely substitution errors will occur. The default is
100. Usually you can raise it to about 110 more or less safely. Probably even
200 will work fine, but don't rely on that.

Consistent aggression levels between versions is not guaranteed.
The default, however, will always be 100.

This option turns on
.BR --match
automatically.

.TP
.B "-c"
.TP 
.B "--clean"
Remove small black marks that are probably noise.
This algorithm can really devastate halftone patterns, so use with caution.

This option is turned on by
.BR "--lossy".

.TP 
.BI "-d " "n"
.TP 
.BI "--dpi " "n"
Specify the resolution of an image, measured in dots per inch.
The resolution affects some algorithms and it's recorded in DjVu
and BMP files (TIFF should join someday).

.TP
.B "-e"
.TP 
.B "--erosion"
Sacrifice image quality to gain about 5-10% in file size.
One erosion is almost invisible, but 10 erosions in a row spoil an image badly
(and they won't give you 50-100% of file size, alas).
Erosion bonus stacks with pattern matching.

Erosion makes no sense when the output is not DjVu.

This option is turned on by
.BR "--lossy".

.TP
.B "-i"
.TP 
.B "--indirect"

Specifying this option in multipage mode causes minidjvu-mod to generate an
.I indirect
multipage document, consisting from a single index file, several single-page
DjVu files (one per each image passed to the encoder) and several shared
dictionary files. Note that the index file is created under the name
specified for the output file in the command line, while for each page
the original input file name is preserved, with the extension being
changed to ".djvu".

This mode is useful for placing a large document to a Web server, or if you
are going to postprocess the generated files (e. g. by adding a color
background). In the later case you may then want to convert your indirect
document to DjVu bundled, using the
.B djvmcvt
utility, supplied with DjVuLibre.

.TP
.B "-j"
.TP
.B "--jb2"
This instruct encoder to save pages of the document as jb2 chunks instead of
djvu. This is usefull for some cases of further document postprocessing.
Implies
.BR --indirect
mode.

.TP 
.B "-l"
.TP 
.B "--lossy"
Turn on all lossy options. Is equivalent to
.BR --Averaging
.BR --clean
.BR --erosion
.BR --match
.BR --smooth.

.TP
.B "-m"
.TP 
.B "--match"
Run pattern matching. This is the main method of shrinking the file size,
but it can also bring trouble with substitution errors. Use
.BR --aggression
option to maintain balance between file size and error probability.

This option is turned on by
.BR "--lossy"
or 
.BR "--aggression".

.TP 
.B "-n"
.TP 
.B "--no-prototypes"
Disable prototype searching. This makes lossless compression faster,
but produced files become much bigger.

.TP 
.B "-p"
.TP 
.B "--pages-per-dict"
Specify how many pages to compress in one pass. The default is 10. If
.BR "-p 0"
is specified, minidjvu-mod will attempt to process all pages at once, but be
aware that this can take a lot of memory, especially on large books.

.TP 
.B "-r"
.TP 
.B "--report"
Print verbose messages about what's done on which page.
Works only with multipage encoding.
Useful only to survive boredom while compressing a book.


.TP 
.B "-s"
.TP 
.B "--smooth"
Flip some pixels that appear to be noise. The gain in file size is about 5%.
Visually the image is slightly improved, but it's hardly noticeable.

Current filter is dumb and only removes black pixels with
at least 3 white neighbors (of 4). You probably won't notice the effects.

This option is turned on by
.BR "--lossy".

.TP
.B "-S" "settings-file"
Read encoder settings from a "settings-file". Some command line options may be
overriden. Settings file format could be found in a next paragraph.

.TP
.B "-t" "n"
.TP
.B "--threads-max" "n"
Process pages assigned to a different shared dictionaries in up to N parallel
threads. By default N is equal to the number of CPU cores if there are only
1 or 2 cores. Otherwise it's equal to number of CPU cores minus 1.

Specify "-t 1" to disable multithreading.
minidjvu-mod must be built with OpenMP support to enable this option.

.TP
.B "-u"
.TP
.B "--unbuffered"
Use unbuffered output to console. Useful for precise progress tracking with
.BR "-r".

.TP 
.B "-v"
.TP 
.B "--verbose"
Print messages about various stages of the process.
It's not very useful, but interesting to examine.

.TP 
.B "-X"
.TP 
.B "--Xtension"
Specifies an extension for shared dictionary files (without a leading
period). The default is "djbz".

NOTE: most popular viewer
.BR djview4
expects only "djbz" or "iff" extensions.

.TP 
.B "-w"
.TP 
.B "--warnings"
Do not disable libtiff warnings. By default, TIFF warnings are suppressed.
Under Windows default TIFF warning handler creates a message box.
This is unacceptable in a batch processing script, for instance.
So the minidjvu-mod default behavior is a workaround for libtiff default behavior.

.SH "SETTINGS FILE FORMAT"

This paragraph describes format of a file that may be used with
.BR "-S"
option to fine-tune encoding process. It's quite verbose and it's expected that such settings file will be generated by some GUI application instead of typing by user. In particular this option is designed for the needs of
.BR "ScanTailor Universal ver. 0.3.0+"
project. The format is inspired by the format used for setting DjVu document outline in
.BR "djvused"
application from
.BR "DjVuLibre"
package.

Settings file should shall contain parenthesized expressions in a following format:
.B "( values )"

The tabs and symbols of a new line are treated as spaces. value may be a parenthesized expression on its own. So nesting expressions are possible.
Each value may be a word or a number. If values should contain multiple words they must be enquoted with " symbol.
First value of parenthesized expression is considered to be its
.B "id"

Following ids are possible:
.B "options, input-files, djbz, default-djbz, default-image, files, file, image"

The first 3 ids are define top-level parenthesized expressions. Others are for nested parenthesized expressions that may be inside them.
Other values that forllow id (except for nested expressions) are considered to be an arguement or a name of a parameter which is followed by an arguement. If it's a name of some parameter then next value is expected to be its arguement (sometimes two).

If value starts with # - it and the rest of the line is interpreted as a commentary and ignored.

Let's consider a top-level expressions:

.TP
.B "options"
.TP
Contains application options (pretty the same as may be passed via the command line) and default options for images and shared dictionaries. There must be only one expression with "options" id in a settings file. Example:

(options              # application options and defaults

 (default-djbz        # default djbz settings
   averaging     0    # default averaging (off)
   aggression    100  # default aggression level (100)
   erosion       0    # default erosion (disabled)
   no-prototypes 0    # default prototypes usage (on)
   xtension      djbz # default djbz id extension ("djbz")
 )

 (default-image       # default image options

   #dpi           300 # if set, use this dpi value for encoding all images
                      # except those that have personal dpi option set.
                      # if not set, use dpi of source image of each page.

   smooth       0     # default smoothing image before processing (off)
   clean        0     # default cleaning image after processing (off)
   erosion      0     # default erosion image after processing (off)
 )


 indirect       0     # save indirect djvu (multifile) (off)
 #lossy          1    # if set, turns off or on following options:
                      # default-djbz::erosion, default-djbz::averaging
                      # default-image::smooth, default-image::clean, default-image::match

 match          1     # use substitutions of visually similar characters for compression
 pages-per-dict 10    # automatically assign pages that aren't referred
                      # in any djbz blocks to the new djbz dictionaries.
                      # New dictionaries contain 10 (default) pages or less.

 report         0     # report progress to stdout
 #threads-max   2     # if set, use max N threads for processing (each thread
                      # process one block of pages. One djbz is a one block).
                      # By default, if CPU have C cores:
                      # if C > 2 then N = C-1, otherwise N = 1
 verbose        1     # print verbose log to stdout
 warnings       1     # print libtiff warnings to stdout
)




.TP
.B "input-files"
.TP
Contains a list of files to process. Each file may be presented in this list as an absulute filename or nested expression with "file" id. The order of files in this list defines order of pages in the document. There must be only one expression with "input-files" id in a settings file. Example:


(input-files       # Contains a list of input image files
                   # the order is the same as the the order of pages in document.
                   # Multipage tiff's are expanded to thet set of single page tiffs.

 path/file1        # Full filename of the image. It will use default image options.
 "path 2/file2"    # Second filename is quoted bcs it contains a space sharacter.

 (file             # Nested block with id file is used for 3rd image
                   # to overwrite default image options

   path/file3      # full filename of the 3nd image
   (image          # image settings of the 3nd image
                   # that overrides default settings
     smooth   0
     clean    0
     # etc. as described in "default-image" expression

     #virtual 600 800   # if such parameter is included then input file won't be
                   # really read. Instead of that an empty page with width 600
                   # and height 800 will be created in the document. That's
                   # a bit faster than feeding the encoder with the
                   # empty image files.
     #id      page # allows to control chunk id value
                   # equal to the base filename by default
   )

   # The following parameters may be useful to refer a single or subset
   # of pages in a multipage image file (tiff)
   page       0    # if file is multipage, use only page 0
   page-start 0    # if file is multipage, use pages from 0 to page-end
   page-end   3    # if file is multipage, use pages from page-start to 3
  )

 # etc. for other files. Just write their filename if default settings is fine
 # or include filename in (file ...) list to use page-specific settings.
)



.TP
.B "djbz"
.TP
Define a single shared dictionary and its settings. There may be a multiple expressions with "djbz" id in a settings file. The files reffered by the shared dictionary MUST exists in "input-files" list. Example:


 (djbz             # describes a set of pages that should belong to
                   # the same shared dictionary and its settings.
   id         0001 # Mandatory ID of the djbz. Should be unique. Not neccessary to be
                   # a number. The extension will be added to it.

   xtension   iff  # overrides default ("djbz") djbz extension, so
                   # the resulting id will be "0001.iff"
   averaging  0    # overrides default-djbz averaging (0)
   aggression 100  # overrides default-djbz aggression (100)
   classifier 3    # overrides default-djbz classifier used to encode this block
   no-prototypes 0 # overrides default-djbz no-prototypes
   erosion       0 # overrides default-djbz erosion of glyphs in the shared dictionary
                   # (which is a jb2 image by nature)
   (files          # a list of files that should be included in this djbz
                   # files MUST exists in (input-files ...)
                   # the structure is pretty same as in (input-files ...),
                   # but (file ...) lists in (files ...) must not include
                   # (image ...) options as they are provided in (input-files ...)

     path/file1
     (file
      path/file2
      ...
     )
   )
   ...
  )

.TP
Note: the files in "input-files" that are not referred in any "djbz" will be distributed between automatically created shared dictionaries with respect to options:pages-per-dict value. Such dictionaries will use settings from "default-djbz" expression or default values if it's not provided. The unique id values for shared dictionaries will be automatically generated.

.TP
So, in general settings file shall looks like:

 (options
 # some app options and overriden defaults
 )

 (input-files
 # list of all files that must be included in the document
 )

 (djbz
 # first djbz
 )

 (djbz
 # second djbz
 )

 # etc.

.TP
That's it.

.SH BUGS

Multipage encoder does not work properly if pages have different resolution.
